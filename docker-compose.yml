version: '3.8'

volumes:
  vol-emqx-data:
    name: foo-emqx-data
  vol-emqx-etc:
    name: foo-emqx-etc
  vol-emqx-log:
    name: foo-emqx-log
  mariadb:
    driver: local
  nodered_data:
  mytb_data:
  mytb_logs:

networks:
  iot:
    name: iot_host
    driver: bridge

services:
  mariadb:
    container_name: mariadb
    image: arm64v8/mariadb:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MYSQL_USER: ${MARIADB_USER}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD}
      MYSQL_DATABASE: ${MARIADB_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - mariadb:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
    networks:
      iot:
        aliases: 
          - mariadb_host

  phpmyadmin:
    depends_on:
      - mariadb
    container_name: phpmyadmin
    image: phpmyadmin:latest
    restart: always
    ports:
      - "4001:80"
    environment:
      - PMA_HOST=mariadb_host
      - PMA_PORT=3306
    networks:
      iot:
        aliases: 
          - phpmyadmin_host

  emqx:
    depends_on:
      - mariadb
    container_name: emqx
    image: emqx/emqx:4.4.14
    restart: always
    ports:
      - "18083:18083"
      - "18084:18084"
      - "1883:1883"
      - "8883:8883"
      - "8083:8083"
      - "8084:8084"
    volumes:
      - vol-emqx-data:/opt/emqx/data
      - vol-emqx-etc:/opt/emqx/etc
      - vol-emqx-log:/opt/emqx/log
    environment:
      EMQX_NAME: TELCOMZ
      EMQX_HOST: 127.0.0.1
      EMQX_DASHBOARD__DEFAULT_USER__PASSWORD: "Control1982"
      EMQX_ALLOW_ANONYMOUS: "false"
      EMQX_NOMATCH: "deny"
      EMQX_AUTH__MYSQL__SERVER: "mariadb_host:3306"
      EMQX_AUTH__MYSQL__USERNAME: ${MARIADB_USER}
      EMQX_AUTH__MYSQL__PASSWORD: ${MARIADB_PASSWORD}
      EMQX_AUTH__MYSQL__DATABASE: ${MARIADB_DATABASE}
      EMQX_LOADED_PLUGINS: "emqx_recon,emqx_retainer,emqx_management,emqx_dashboard,emqx_auth_mysql"
    networks:
      iot:
        aliases:
          - emqx_host

  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    ports:
      - "1880:1880"
    volumes:
      - nodered_data:/data
    environment:
      - TZ=America/New_York
    restart: always
    networks:
      iot:
        aliases:
          - node_red_host

  mytb:
    image: thingsboard/tb-postgres
    container_name: thingsboard
    restart: always
    ports:
      - "8080:8080"
      - "7070:7070"
      - "5683-5688:5683-5688/udp"
    environment:
      TB_QUEUE_TYPE: in-memory
    volumes:
      - mytb_data:/data
      - mytb_logs:/var/log/thingsboard
    networks:
      iot:
        aliases:
          - thingsboard_host

  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    volumes:
      - ./config:/config
    environment:
      - TZ=America/New_York
    restart: unless-stopped
    network_mode: host
